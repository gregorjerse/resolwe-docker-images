name: Build base resolwe-bio image

on:
  workflow_dispatch:
    inputs:
      contexts:
        description: 'Building contexts'
        type: string
    
env:
  REGISTRY: ${{ vars.REGISTRY || '396487289173.dkr.ecr.us-east-1.amazonaws.com' }}
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
  BASE_REPOSITORY: genialis/whatever


jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:
      contexts: ${{ steps.prepare_build.outputs.contexts }}
    steps:
      - name: Checkout out the source code
        uses: actions/checkout@v4

      - id: prepare_build
        run: |
          GIVEN_CONTEXTS=${{ inputs.contexts }}
          echo "GIVEN_CONTEXTS: $GIVEN_CONTEXTS"
          JSON_CONTEXTS=`echo \"$GIVEN_CONTEXTS\" | jq 'split(",")' --compact-output`
          echo "Computed JSON Context: $JSON_CONTEXTS"
          #echo "GIVEN_CONTEXTS: $GIVEN_CONTEXTS"
          ALL_CONTEXTS=()
          for FILE in `find . -name 'docker_build_info.env'`;
          do
              CONTEXT=`dirname $FILE`;
              ALL_CONTEXTS+=("${CONTEXT}");
          done;
          #JSON_CONTEXTS=`jq --compact-output --null-input '$ARGS.positional' --args -- ${ALL_CONTEXTS[@]}`
          echo "JSON Context"
          echo $JSON_CONTEXTS
          echo "contexts=$(jq -cn --argjson environments "$JSON_CONTEXTS" '{target: $environments}')" >> $GITHUB_OUTPUT

  run-matrix:
    needs: setup
    runs-on: ubuntu-22.04
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.contexts) }}
    steps:
      #   - name: Configure AWS Credentials
      #     uses: aws-actions/configure-aws-credentials@v4
      #     with:
      #       aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
      #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #       aws-region: ${{ env.AWS_REGION }}

      #   - name: Login to AWS ECR
      #     uses: docker/login-action@v3
      #     with:
      #       registry: ${{ env.REGISTRY }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout out the source code
        uses: actions/checkout@v4

      - name: Read the environment from file
        id: import-env
        shell: bash
        run: |
          ls
          export filename=resolwe_docker_images/${{ matrix.target }}/docker_build_info.env
          echo $filename
          while read line; do
            echo "$line" >> $GITHUB_ENV
          done < ${filename}

      - name: Generate tags and labels
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=${{ env.TAG }}

      - name: Build the image
        uses: docker/build-push-action@v5
        with:
          context: resolwe_docker_images/${{ matrix.target }}
          file: resolwe_docker_images/${{ matrix.target }}/${{ env.DOCKERFILE }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ env.SUPPORTED_PLATFORMS }}
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
          push: false
