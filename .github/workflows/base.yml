name: Build base resolwe-bio image

on:
  workflow_dispatch:
    inputs:
      dockerfile:
        description: 'Dockerfile to build'
        required: true
        type: string
      context:
        description: 'Building context'
        required: true
        type: string
      supported_platforms:
        default: 'linux/amd64,linux/arm64'
        type: choice
        options:
        - 'linux/amd64'
        - 'linux/amd64,linux/arm64'
      base_image:
        default: 'public.ecr.aws/genialis/resolwe/base:ubuntu-22.04-24102023'
        type: choice
        options:
        - 'public.ecr.aws/genialis/resolwe/base:ubuntu-22.04-24102023'
    
env:
  REGISTRY: ${{ vars.REGISTRY || '396487289173.dkr.ecr.us-east-1.amazonaws.com' }}
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
  BASE_REPOSITORY: genialis/whatever

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    #   - name: Configure AWS Credentials
    #     uses: aws-actions/configure-aws-credentials@v4
    #     with:
    #       aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
    #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       aws-region: ${{ env.AWS_REGION }}

    #   - name: Login to AWS ECR
    #     uses: docker/login-action@v3
    #     with:
    #       registry: ${{ env.REGISTRY }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout out the source code
        uses: actions/checkout@v4

      - name: Generate tags and labels
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BASE_REPOSITORY }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest

      - name: Build the image
        uses: docker/build-push-action@v5
        with:
          context: ${{ vars.context }}
          file: ${{ vars.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ vars.supported_platforms }}
          build-args: |
            BASE_IMAGE=${{ env.vars.base_image }}
          push: false
